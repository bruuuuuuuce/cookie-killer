// .eslintrc
{
  "parser": "@typescript-eslint/parser",
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "parserOptions": {
    "ecmaVersion": 12,
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:import/recommended"
  ],

  "rules": {
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_", "destructuredArrayIgnorePattern": "^_" }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "semi": ["error", "always"],
    "import/no-extraneous-dependencies": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "no-case-declarations": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],
    // async without await is often an error and in other uses it obfuscates
    // the intent of the developer. Functions are async when they want to await.
    "require-await": "error",
    "@typescript-eslint/no-explicit-any": "error"
  },

  "env": {
    "browser": true,
    "es2021": true
  }
}
